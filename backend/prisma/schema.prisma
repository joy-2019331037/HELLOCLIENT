generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String        @id @default(uuid())
  email                 String        @unique
  password              String
  firstName             String
  lastName              String
  role                  String        @default("user")
  phone                 String?
  avatar                String?
  isActive              Boolean       @default(true)
  lastLogin             DateTime?
  emailVerified         Boolean       @default(false)
  resetPasswordToken    String?
  resetPasswordExpires  DateTime?
  timezone              String        @default("UTC")
  notificationPreferences Json?
  dashboardPreferences  Json?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  clients               Client[]
  projects              Project[]
  interactions          Interaction[]
  reminders             Reminder[]
}

model Client {
  id            String        @id @default(uuid())
  name          String
  email         String
  phone         String
  company       String?
  notes         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  projects      Project[]
  interactions  Interaction[]
  reminders     Reminder[]
}

model Project {
  id            String        @id @default(uuid())
  title         String
  budget        Float
  deadline      DateTime
  status        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  clientId      String
  client        Client        @relation(fields: [clientId], references: [id])
  interactions  Interaction[]
  reminders     Reminder[]
}

model Interaction {
  id            String        @id @default(uuid())
  date          DateTime
  type          String
  notes         String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  clientId      String?
  client        Client?       @relation(fields: [clientId], references: [id])
  projectId     String?
  project       Project?      @relation(fields: [projectId], references: [id])
}

model Reminder {
  id            String        @id @default(uuid())
  title         String
  description   String
  dueDate       DateTime
  type          String        @default("manual")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  clientId      String?
  client        Client?       @relation(fields: [clientId], references: [id])
  projectId     String?
  project       Project?      @relation(fields: [projectId], references: [id])
} 